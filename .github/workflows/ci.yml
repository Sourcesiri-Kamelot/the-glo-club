name: 🚀 The Glo Club CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 🔧 Install dependencies
      run: npm ci

    - name: 🏗️ Build project
      run: npm run build

    - name: 🧪 Run tests
      run: node scripts/test-functionality.js

    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: build-files
        path: .next/

  lint:
    name: 🔍 Lint & Format
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 🔧 Install dependencies
      run: npm ci

    - name: 🔍 Run ESLint
      run: npm run lint

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 🔧 Install dependencies
      run: npm ci

    - name: 🔒 Run security audit
      run: npm audit --audit-level=high

  deploy-preview:
    name: 🌐 Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'pull_request'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 🔧 Install dependencies
      run: npm ci

    - name: 🏗️ Build project
      run: npm run build

    - name: 🌐 Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    name: 🚀 Deploy Production
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 🔧 Install dependencies
      run: npm ci

    - name: 🏗️ Build project
      run: npm run build

    - name: 🚀 Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        scope: ${{ secrets.VERCEL_ORG_ID }}

  dependabot:
    name: 🤖 Dependabot Auto-merge
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'

    steps:
    - name: 🤖 Auto-merge Dependabot PRs
      uses: ahmadnassri/action-dependabot-auto-merge@v2
      with:
        target: minor
        github-token: ${{ secrets.GITHUB_TOKEN }}
